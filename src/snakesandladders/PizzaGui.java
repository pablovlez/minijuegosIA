/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PizzaGui.java
 *
 * Created on 3/11/2010, 05:10:35 PM
 */
package snakesandladders;

import java.awt.Cursor;
import java.awt.TextArea;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author pabloava
 */
public class PizzaGui extends javax.swing.JFrame {

    /** Creates new form PizzaGui */
    int n = 8;
    public Pizza p = new Pizza();
    public boolean turnoMaquina;
    public Hilo hilo = new Hilo();
    int numeroAleatorio = (int) (Math.random() * 2 + 1);
    String ganador=null;

    public PizzaGui(boolean _turnomaquina) {
        super("Pizza Envenenada");
        turnoMaquina=_turnomaquina;
        initComponents();
        System.out.println("Hay " + n + " pedazos");
        System.out.println(p.ArbolMiniMax(n));

        if (turnoMaquina == true) {
            hilo.iniciar();
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnPizza = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnTomar1 = new javax.swing.JButton();
        btnTomar2 = new javax.swing.JButton();
        btnTomar3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaInfo = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        pnPizza.setBackground(new java.awt.Color(204, 204, 204));
        pnPizza.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza8.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout pnPizzaLayout = new javax.swing.GroupLayout(pnPizza);
        pnPizza.setLayout(pnPizzaLayout);
        pnPizzaLayout.setHorizontalGroup(
            pnPizzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPizzaLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        pnPizzaLayout.setVerticalGroup(
            pnPizzaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPizzaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel1.add(pnPizza);
        pnPizza.setBounds(30, 60, 400, 340);

        btnTomar1.setText("Tomar 1");
        btnTomar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTomar1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnTomar1);
        btnTomar1.setBounds(30, 420, 100, 23);

        btnTomar2.setText("Tomar 2");
        btnTomar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTomar2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnTomar2);
        btnTomar2.setBounds(150, 420, 100, 23);

        btnTomar3.setText("Tomar 3");
        btnTomar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTomar3ActionPerformed(evt);
            }
        });
        jPanel1.add(btnTomar3);
        btnTomar3.setBounds(280, 420, 100, 23);

        txaInfo.setColumns(20);
        txaInfo.setRows(5);
        jScrollPane1.setViewportView(txaInfo);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(470, 60, 230, 340);

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 16));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("P I Z Z A  E N V E N E N A D A");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(180, 20, 420, 30);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Archivo");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-758)/2, (screenSize.height-544)/2, 758, 544);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTomar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTomar1ActionPerformed

        n = n - 1;
        turnoMaquina = true;
        imagenes(n);
        txaInfo.append("Tomaste " + 1 + " pedazo\n");
        txaInfo.append("Quedan " + n + " pedazos\n");
        botones(n);
        if (hilo.animationThread != null) {
            hilo.resum();
        } else {
            hilo.iniciar();
        }
        //jugar();
        //p.verArbol();
// TODO add your handling code here:
    }//GEN-LAST:event_btnTomar1ActionPerformed

    private void btnTomar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTomar2ActionPerformed
        n = n - 2;
        turnoMaquina = true;
        imagenes(n);
        txaInfo.append("Tomaste " + 2 + " pedazo\n");
        txaInfo.append("Quedan " + n + " pedazos\n");
        botones(n);
        if (hilo.animationThread != null) {
            hilo.resum();
        } else {
            hilo.iniciar();
        }
        //jugar();
        //p.verArbol();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTomar2ActionPerformed

    private void btnTomar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTomar3ActionPerformed
        n = n - 3;
        turnoMaquina = true;
        imagenes(n);
        txaInfo.append("Tomaste " + 3 + " pedazo\n");
        txaInfo.append("Quedan " + n + " pedazos\n");
        botones(n);
        if (hilo.animationThread != null) {
            hilo.resum();
        } else {
            hilo.iniciar();
        }
        //jugar();
        //p.verArbol();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnTomar3ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:

        JOptionPane.showMessageDialog(this, "Se tiene una pizza de ocho porciones,\nEl juego consiste en tomar 1, 2 o 3 pedazos de la pizza,\n al final quedara un pedazo, el que lo tome perdera el juego");
    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PizzaGui().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnTomar1;
    public static javax.swing.JButton btnTomar2;
    public static javax.swing.JButton btnTomar3;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JMenu jMenu1;
    public static javax.swing.JMenu jMenu2;
    public static javax.swing.JMenuBar jMenuBar1;
    public static javax.swing.JPanel jPanel1;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JPanel pnPizza;
    public static javax.swing.JTextArea txaInfo;
    // End of variables declaration//GEN-END:variables

    public void jugar() {



        while (n != 0 && turnoMaquina == true) {
            if (p.ArbolMiniMax(n).equals("Tomar 1") && turnoMaquina == true) {
                n = n - 1;
                turnoMaquina = false;
                //imagenes(n);
                txaInfo.append("La maquina tomo " + 1 + " pedazo\n");
                txaInfo.append("Quedan " + n + " pedazos\n");
                botones(n);
                //p.verArbol();

            }
            if (p.ArbolMiniMax(n).equals("Tomar 2") && turnoMaquina == true) {
                n = n - 2;
                turnoMaquina = false;
                //imagenes(n);
                txaInfo.append("La maquina tomo " + 2 + " pedazos\n");
                txaInfo.append("Quedan " + n + " pedazos\n");
                botones(n);
                // p.verArbol();

            }
            if (p.ArbolMiniMax(n).equals("Tomar 3") && turnoMaquina == true) {
                n = n - 3;
                turnoMaquina = false;
                //imagenes(n);
                txaInfo.append("La maquina tomo " + 3 + " pedazos\n");
                txaInfo.append("Quedan " + n + " pedazos\n");
                botones(n);
                // p.verArbol();

            }
        }
        if (n == 0) {
            p.ArbolMiniMax(n);
            if (turnoMaquina == true) {
                hilo.detener();
                txaInfo.append("GANA LA MAQUINA");
                JOptionPane.showMessageDialog(this,"HA GANADO LA MAQUINA\n RETROCEDERAS 6 CASILLAS");
                ganador="MAX";
                dispose();

            } else {
                hilo.detener();
                txaInfo.append("GANASTE");
                JOptionPane.showMessageDialog(this,"HAS GANADO\n LA MAQUINA RETROCEDERA 6 CASILLAS");
                ganador="MIN";
                dispose();

            }
            
        }
        imagenes(n);
        if (hilo.animationThread != null) {
            setCursor(Cursor.getDefaultCursor());
            btnTomar1.setEnabled(true);
            btnTomar3.setEnabled(true);
            btnTomar2.setEnabled(true);
            botones(n);
            hilo.pausar();

        }

    }



    public class Hilo implements Runnable {

        //private boolean continuar = true;
        public Hilo() {
        }
        // metodo para poner el boolean a false.
        private Thread animationThread = null;

        public void run() {
            Thread currentThread = Thread.currentThread();


            while (currentThread == animationThread) {
                btnTomar1.setEnabled(false);
                btnTomar3.setEnabled(false);
                btnTomar2.setEnabled(false);
                setCursor(Cursor.WAIT_CURSOR);
                System.out.println(12);
                try {

                    animationThread.sleep(2000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
                jugar();
            }
        }

        public void iniciar() {
            if (this.animationThread == null) {
                this.animationThread = new Thread(this, "animacion");
                this.animationThread.start();
            }

        }

        public void detener() {
            this.animationThread = null;
        }

        public void pausar() {
            this.animationThread.suspend();
        }

        public void resum() {
            this.animationThread.resume();
        }
    }

    public void botones(int n) {
        if (n == 2) {
            btnTomar3.setEnabled(false);
        }
        if (n == 1) {
            btnTomar2.setEnabled(false);
            btnTomar3.setEnabled(false);
        }
    }

    public void imagenes(int n) {

        jLabel1.setIcon(iconos[n]);
    }
    public ImageIcon[] iconos = {new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza0.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza1.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza2.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza3.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza4.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza5.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza6.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza7.jpg")),
        new javax.swing.ImageIcon(getClass().getResource("/images/pizza/pizza8.jpg"))
    };
}


